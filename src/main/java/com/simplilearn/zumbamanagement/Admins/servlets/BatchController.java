package com.simplilearn.zumbamanagement.Admins.servlets;

import com.simplilearn.zumbamanagement.Admins.models.Batch;
import com.simplilearn.zumbamanagement.Admins.service.BatchService;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

@WebServlet("/batches")
public class BatchController extends HttpServlet {
    private BatchService batchService;

    @Override
    public void init() throws ServletException {
        batchService = new BatchService();
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");
        
        switch (action == null ? "list" : action) {
            case "delete":
                int deleteId = Integer.parseInt(request.getParameter("id"));
                batchService.deleteBatch(deleteId);
                response.sendRedirect("batches?action=list");
                break;

            case "edit":
                int editId = Integer.parseInt(request.getParameter("id"));
                Batch batch = batchService.getBatch(editId);
                request.setAttribute("batch", batch);
                RequestDispatcher editDispatcher = request.getRequestDispatcher("Batch.jsp");
                editDispatcher.forward(request, response);
                break;

            case "list":
            default:
                List<Batch> batches = batchService.getAllBatches();
                request.setAttribute("batches", batches);
                RequestDispatcher listDispatcher = request.getRequestDispatcher("Batch.jsp");
                listDispatcher.forward(request, response);
                break;
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        if ("add".equals(action)) {
            String time = request.getParameter("time");
            String instructor = request.getParameter("instructor");
            int maxParticipants = Integer.parseInt(request.getParameter("maxParticipants"));

            Batch newBatch = new Batch(0, time, instructor, maxParticipants); // ID will be auto-generated by DB
            batchService.addBatch(newBatch);
            response.sendRedirect("batches?action=list");

        } else if ("update".equals(action)) {
            int id = Integer.parseInt(request.getParameter("id"));
            String time = request.getParameter("time");
            String instructor = request.getParameter("instructor");
            int maxParticipants = Integer.parseInt(request.getParameter("maxParticipants"));

            Batch updatedBatch = new Batch(id, time, instructor, maxParticipants);
            batchService.updateBatch(updatedBatch);
            response.sendRedirect("batches?action=list");
        }
    }
}
	